name: Publish release

on:
  workflow_run:
    workflows: [Validate item data]
    types:
      - completed
    branches:
      - master

permissions:
  contents: write

jobs:
  release:
    runs-on: "ubuntu-latest"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download item-data artifact
        uses: actions/github-script@v7
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "item-data"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/item-data.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip item-data.zip

      - name: Get current date
        run: echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: latest
          title: "Latest data - updated ${{ env.RELEASE_DATE }}"
          files: |
            item-data.json

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "v${{ github.run_number }}"
          title: "v${{ github.run_number }} - updated ${{ env.RELEASE_DATE }}"
          files: |
            item-data.json
